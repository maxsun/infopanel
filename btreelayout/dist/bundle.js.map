{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./src/btree_utils.ts","webpack:///./src/rendering.ts","webpack:///./src/types.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/btreelayout.ts"],"sourcesContent":["// UTILS\nimport { BNode, Content, isContent, Split, isSplit, Handle } from \"./types\";\n\nexport const getBNodeByKey = (rootNode: BNode, id: string): null | BNode => {\n  if (id === \"\") return rootNode;\n  if (isContent(rootNode)) return null;\n  if (isSplit(rootNode)) {\n    if (id[0] === \"0\") {\n      return getBNodeByKey(rootNode.fst, id.substring(1));\n    } else {\n      return getBNodeByKey(rootNode.snd, id.substring(1));\n    }\n  }\n};\n\nexport const replaceNode = (\n  original: BNode,\n  to_replace: string,\n  new_node: BNode\n): BNode => {\n  if (to_replace === \"\") return new_node;\n  if (isContent(original)) return original;\n  if (isSplit(original)) {\n    if (to_replace[0] === \"0\") {\n      return {\n        fst: replaceNode(original.fst, to_replace.substring(1), new_node),\n        snd: original.snd,\n        pos: original.pos,\n        direction: original.direction,\n      };\n    } else {\n      return {\n        fst: original.fst,\n        snd: replaceNode(original.snd, to_replace.substring(1), new_node),\n        pos: original.pos,\n        direction: original.direction,\n      };\n    }\n  }\n};\n\nexport const insertSplit = (root: BNode, id: string): BNode => {\n  let toInsert: BNode = {\n    fst: document.createElement(\"div\"),\n    snd: getBNodeByKey(root, id.replace(\"root\", \"\")),\n    direction: \"vertical\",\n    pos: 50,\n  };\n  return replaceNode(root, id.replace(\"root\", \"\"), toInsert);\n};\n\nexport const deleteNode = (root: BNode, id: string): BNode => {\n  let parentId = id.substring(0, id.length - 1);\n  let parent = getBNodeByKey(root, parentId.replace(\"root\", \"\")) as Split;\n  let r = null;\n  if (id.charAt(id.length - 1) === \"0\") {\n    r = parent.snd;\n  } else {\n    r = parent.fst;\n  }\n  return replaceNode(root, parentId.replace(\"root\", \"\"), r);\n};\n\nexport const nudge = (\n  root: BNode,\n  id: string,\n  direction: string,\n  bias: number,\n  absolute?: boolean\n): BNode => {\n  // console.log(`Nudging ${id} ${direction} ${bias}`);\n\n  absolute = absolute ? absolute : false;\n\n  if (id.replace(\"root\", \"\") === \"\") {\n    // console.log(\"Tried to nudge, but nowhere to go\");\n    return root;\n  }\n\n  const parentId = id.substring(0, id.length - 1);\n  const parentNode = getBNodeByKey(root, parentId.replace(\"root\", \"\"));\n  if (isContent(parentNode)) {\n    throw Error(\"parent is somehow content\");\n  }\n\n  if (parentNode.direction === direction) {\n    // the split is compatible with the direction we want to nudge\n    let lastchr = id.charAt(id.length - 1);\n\n    // check if moving against edge of parent split. if so, nudge parent\n    if ((bias > 0 && lastchr === \"1\") || (bias < 0 && lastchr == \"0\")) {\n      // console.log(`Trying to move ${direction}, but cant. Will nudge parent.`);\n      let nudgedParent = nudge(root, parentId, direction, bias, absolute);\n      // console.log(\n      //   \"Nudged parent:\",\n      //   nudgedParent,\n      //   \"now have to normalize children\"\n      // );\n\n      const getChangedIds = (\n        node1: BNode,\n        node2: BNode,\n        id: string\n      ): string[] => {\n        if (\n          (isContent(node1) && isSplit(node2)) ||\n          (isSplit(node1) && isContent(node2))\n        ) {\n          throw Error(\"comparison is off somehoow\");\n        }\n        if (isSplit(node1) && isSplit(node2)) {\n          const changedFst = getChangedIds(node1.fst, node2.fst, id + \"0\");\n          const changedSnd = getChangedIds(node1.snd, node2.snd, id + \"1\");\n          if (node1.pos != node2.pos) {\n            return changedFst.concat(changedSnd).concat([id]);\n          }\n          return changedFst.concat(changedSnd);\n        }\n        if (isContent(node1) && isContent(node2)) {\n          return node1 !== node2 ? [id] : [];\n        }\n        console.log(\"UNEXPECTED:\", node1, node2);\n      };\n\n      let changes: { [nid: string]: number } = {};\n      let changedIds = getChangedIds(root, nudgedParent, \"\");\n      changedIds.forEach((changeId) => {\n        let original = getBNodeByKey(root, changeId) as Split;\n        let nudged = getBNodeByKey(nudgedParent, changeId) as Split;\n        let opos = (original as Split).pos;\n        let npos = (nudged as Split).pos;\n        let delta = npos - opos;\n        changes[changeId] = delta;\n      });\n\n      // console.log(`up-tree changes (while nudging ${id}):`, changes);\n      // changedIds = Object.keys(changes).sort((a: string, b: string) =>\n      //   a.length < b.length ? -1 : 1\n      // );\n\n      let oldSize = getAbsoluteSizeOfNode(root, parentId, direction);\n      let newSize = getAbsoluteSizeOfNode(nudgedParent, parentId, direction);\n\n      let oldOffset = getAbsoluteOffsetOfNode(root, parentId, direction);\n      let newOffset = getAbsoluteOffsetOfNode(\n        nudgedParent,\n        parentId,\n        direction\n      );\n\n      let parentOffset = getAbsoluteOffsetOfNode(\n        nudgedParent,\n        parentId,\n        direction\n      );\n\n      // console.log(`Parent (${parentId}) offset: ${oldOffset} => ${newOffset}`);\n\n      let o = oldOffset + oldSize * (parentNode.pos / 100);\n\n      // console.log(`We want to keep the split pos at ${o}`);\n      // console.log(`If we set the pos to 0, it would be at ${parentOffset}`);\n      // console.log(\n      //   `If we set the pos to 100, it would be at ${parentOffset + newSize}`\n      // );\n\n      // If we set the pos to x, its abs position is: parentOffset + (x / 100) * newSize\n      let newPos = ((o - parentOffset) / newSize) * 100;\n      // console.log(\"New pos is:\", newPos);\n\n      let newParent = {\n        fst: parentNode.fst,\n        snd: parentNode.snd,\n        pos: newPos,\n        direction: parentNode.direction,\n      };\n      return replaceNode(nudgedParent, parentId.replace(\"root\", \"\"), newParent);\n    }\n\n    let x = 1;\n    if (absolute) {\n      // console.log(\"Performing pos move for nudge on:\", parentId);\n      // console.log(`Trying to move the line ${bias}% of root.`);\n      const parentSize = getAbsoluteSizeOfNode(root, parentId, direction);\n      // console.log(\"Parent size is:\", parentSize);\n      const rootSize = 100;\n      // console.log(\"Root size is:\", rootSize);\n      x = rootSize / parentSize;\n    }\n\n    let newSplitParent: BNode = {\n      fst: parentNode.fst,\n      snd: parentNode.snd,\n      pos: Math.max(0, Math.min(100, parentNode.pos + bias * x)),\n      direction: parentNode.direction,\n    };\n    return replaceNode(root, parentId.replace(\"root\", \"\"), newSplitParent);\n  }\n  // console.log(\n  //   \"nudging cell in wrong direction -- nudging first available parent\"\n  // );\n  return nudge(root, parentId, direction, bias, absolute);\n};\n\nexport const getAbsoluteSizeOfNode = (\n  rootNode: BNode,\n  id: string,\n  direction: string\n): number => {\n  // the output is 0-100 representing percent size of root, who's size never changes\n\n  if (id.replace(\"root\", \"\") === \"\") {\n    return 100;\n  }\n  const ancestorId = id.slice(0, id.length - 1);\n  const ancestorNode = getBNodeByKey(\n    rootNode,\n    ancestorId.replace(\"root\", \"\")\n  ) as Split;\n  if (ancestorNode.direction !== direction) {\n    return getAbsoluteSizeOfNode(rootNode, ancestorId, direction);\n  }\n  if (\n    id\n      .replace(\"root\", \"\")\n      .replace(ancestorId.replace(\"root\", \"\"), \"\")\n      .charAt(0) === \"0\"\n  ) {\n    return (\n      (ancestorNode.pos / 100) *\n      getAbsoluteSizeOfNode(rootNode, ancestorId, direction)\n    );\n  } else {\n    return (\n      ((100 - ancestorNode.pos) / 100) *\n      getAbsoluteSizeOfNode(rootNode, ancestorId, direction)\n    );\n  }\n};\n\nexport const getAbsoluteOffsetOfNode = (\n  rootNode: BNode,\n  id: string,\n  direction: string\n): number => {\n  // the output is 0-100 representing percent size of root, who's size never changes\n\n  if (id.replace(\"root\", \"\") === \"\") {\n    return 0;\n  }\n  const ancestorId = id.slice(0, id.length - 1);\n  const ancestorNode = getBNodeByKey(\n    rootNode,\n    ancestorId.replace(\"root\", \"\")\n  ) as Split;\n  if (ancestorNode.direction !== direction) {\n    return 0 + getAbsoluteOffsetOfNode(rootNode, ancestorId, direction);\n  }\n  if (\n    id\n      .replace(\"root\", \"\")\n      .replace(ancestorId.replace(\"root\", \"\"), \"\")\n      .charAt(0) === \"0\"\n  ) {\n    return 0 + getAbsoluteOffsetOfNode(rootNode, ancestorId, direction);\n  } else {\n    return (\n      (ancestorNode.pos / 100) *\n        getAbsoluteSizeOfNode(rootNode, ancestorId, direction) +\n      getAbsoluteOffsetOfNode(rootNode, ancestorId, direction)\n    );\n  }\n};\n\nexport const rotateSplit = (rootNode: BNode, id: string): BNode => {\n  let parentId = id.substring(0, id.length - 1);\n  let parent = getBNodeByKey(rootNode, parentId.replace(\"root\", \"\"));\n  if (isContent(parent))\n    throw Error(\"Trying to grow something that has `content` as a parent!\");\n\n  let newParent: Split = {\n    fst: parent.fst,\n    snd: parent.snd,\n    pos: parent.pos,\n    direction: parent.direction === \"vertical\" ? \"horizontal\" : \"vertical\",\n  };\n\n  return replaceNode(rootNode, parentId.replace(\"root\", \"\"), newParent);\n};\n\nexport const adjustSplitSize = (\n  rootNode: BNode,\n  id: string,\n  delta: number\n): BNode => {\n  let parentId = id.substring(0, id.length - 1);\n  console.log(parentId);\n  let parent = getBNodeByKey(rootNode, parentId.replace(\"root\", \"\"));\n  console.log(parent);\n  if (isContent(parent))\n    throw Error(\"Trying to grow something that has `content` as a parent!\");\n\n  let newParent: Split = {\n    fst: parent.fst,\n    snd: parent.snd,\n    pos: parent.pos + delta,\n    direction: parent.direction,\n  };\n\n  return replaceNode(rootNode, parentId.replace(\"root\", \"\"), newParent);\n};\n\nexport const getFocusUp = (\n  nodeState: BNode,\n  currFocus: string\n): null | string => {\n  const getFirstNodeUp = (\n    currFocus: string,\n    history: string[]\n  ): [string, string[]] => {\n    const parentId = currFocus.substring(0, currFocus.length - 1);\n    const parent = getBNodeByKey(nodeState, parentId.replace(\"root\", \"\"));\n    // console.log(\"PARENT IS\", parentId);\n    if (parentId === \"\") {\n      return [currFocus, history];\n    }\n    let nextFocus = null;\n    if (isSplit(parent)) {\n      if (parent.direction === \"vertical\") {\n        if (currFocus.charAt(currFocus.length - 1) === \"1\") {\n          // MOVING FROM LOWER SPLIT\n          nextFocus = parentId + \"0\";\n        } else {\n          // MOVING FROM UPPER SPLIT\n          [nextFocus, history] = getFirstNodeUp(parentId, history);\n        }\n      } else if (parent.direction === \"horizontal\") {\n        [nextFocus, history] = getFirstNodeUp(\n          parentId,\n          history.concat([currFocus.charAt(currFocus.length - 1)])\n        );\n      }\n    }\n    return [nextFocus, history];\n  };\n\n  let [nextFocus, history] = getFirstNodeUp(currFocus, []);\n  if (!nextFocus) return null;\n\n  const getBottomMost = (n: string, horizontalPrefs: string[]): string => {\n    let currNode = getBNodeByKey(nodeState, n.replace(\"root\", \"\"));\n    if (isContent(currNode)) return n;\n    if (isSplit(currNode)) {\n      if (currNode.direction === \"horizontal\") {\n        if (horizontalPrefs.length > 0)\n          return getBottomMost(n + horizontalPrefs.pop(), horizontalPrefs);\n        return getBottomMost(n + \"0\", []); // if uncertain go to first\n      } else {\n        return getBottomMost(n + \"1\", horizontalPrefs);\n      }\n    }\n  };\n  return getBottomMost(nextFocus, history);\n};\n\nexport const getFocusDown = (\n  nodeState: BNode,\n  currFocus: string\n): null | string => {\n  const getFirstNodeDown = (\n    currFocus: string,\n    history: string[]\n  ): [string, string[]] => {\n    const parentId = currFocus.substring(0, currFocus.length - 1);\n    const parent = getBNodeByKey(nodeState, parentId.replace(\"root\", \"\"));\n    if (parentId === \"\") {\n      return [currFocus, history];\n    }\n    let nextFocus = null;\n    if (isSplit(parent)) {\n      if (parent.direction === \"vertical\") {\n        if (currFocus.charAt(currFocus.length - 1) === \"0\") {\n          // MOVING FROM UPPER SPLIT\n          nextFocus = parentId + \"1\";\n        } else {\n          // MOVING FROM LOWER SPLIT\n          [nextFocus, history] = getFirstNodeDown(parentId, history);\n        }\n      } else if (parent.direction === \"horizontal\") {\n        [nextFocus, history] = getFirstNodeDown(\n          parentId,\n          history.concat([currFocus.charAt(currFocus.length - 1)])\n        );\n      }\n    }\n    return [nextFocus, history];\n  };\n\n  let [nextFocus, history] = getFirstNodeDown(currFocus, []);\n  if (!nextFocus) return null;\n\n  const getTopMost = (n: string, horizontalPrefs: string[]): string => {\n    let currNode = getBNodeByKey(nodeState, n.replace(\"root\", \"\"));\n    if (isContent(currNode)) return n;\n    if (isSplit(currNode)) {\n      if (currNode.direction === \"horizontal\") {\n        if (horizontalPrefs.length > 0)\n          return getTopMost(n + horizontalPrefs.pop(), horizontalPrefs);\n        return getTopMost(n + \"0\", []); // if uncertain go to first\n      } else {\n        return getTopMost(n + \"0\", horizontalPrefs);\n      }\n    }\n  };\n  return getTopMost(nextFocus, history);\n};\n\nexport const getFocusRight = (\n  nodeState: BNode,\n  currFocus: string\n): null | string => {\n  const getFirstNodeRight = (\n    currFocus: string,\n    history: string[]\n  ): [string, string[]] => {\n    const parentId = currFocus.substring(0, currFocus.length - 1);\n    const parent = getBNodeByKey(nodeState, parentId.replace(\"root\", \"\"));\n    if (parentId === \"\") {\n      return [currFocus, history];\n    }\n    let nextFocus = null;\n    if (isSplit(parent)) {\n      if (parent.direction === \"horizontal\") {\n        if (currFocus.charAt(currFocus.length - 1) === \"0\") {\n          // MOVING FROM LEFT SPLIT\n          nextFocus = parentId + \"1\";\n        } else {\n          // MOVING FROM RIGHT SPLIT\n          [nextFocus, history] = getFirstNodeRight(parentId, history);\n        }\n      } else if (parent.direction === \"vertical\") {\n        [nextFocus, history] = getFirstNodeRight(\n          parentId,\n          history.concat([currFocus.charAt(currFocus.length - 1)])\n        );\n      }\n    }\n    return [nextFocus, history];\n  };\n\n  let [nextFocus, history] = getFirstNodeRight(currFocus, []);\n  if (!nextFocus) return null;\n\n  const getLeftMost = (n: string, horizontalPrefs: string[]): string => {\n    let currNode = getBNodeByKey(nodeState, n.replace(\"root\", \"\"));\n    if (isContent(currNode)) return n;\n    if (isSplit(currNode)) {\n      if (currNode.direction === \"vertical\") {\n        if (horizontalPrefs.length > 0)\n          return getLeftMost(n + horizontalPrefs.pop(), horizontalPrefs);\n        return getLeftMost(n + \"0\", []); // if uncertain go to first\n      } else {\n        return getLeftMost(n + \"0\", horizontalPrefs);\n      }\n    }\n  };\n  return getLeftMost(nextFocus, history);\n};\n\nexport const getFocusLeft = (\n  nodeState: BNode,\n  currFocus: string\n): null | string => {\n  const getFirstNodeLeft = (\n    currFocus: string,\n    history: string[]\n  ): [string, string[]] => {\n    const parentId = currFocus.substring(0, currFocus.length - 1);\n    const parent = getBNodeByKey(nodeState, parentId.replace(\"root\", \"\"));\n    if (parentId === \"\") {\n      return [currFocus, history];\n    }\n    let nextFocus = null;\n    if (isSplit(parent)) {\n      if (parent.direction === \"horizontal\") {\n        if (currFocus.charAt(currFocus.length - 1) === \"1\") {\n          // MOVING FROM RIGHT SPLIT\n          nextFocus = parentId + \"0\";\n        } else {\n          // MOVING FROM LEFT SPLIT\n          [nextFocus, history] = getFirstNodeLeft(parentId, history);\n        }\n      } else if (parent.direction === \"vertical\") {\n        [nextFocus, history] = getFirstNodeLeft(\n          parentId,\n          history.concat([currFocus.charAt(currFocus.length - 1)])\n        );\n      }\n    }\n    return [nextFocus, history];\n  };\n\n  let [nextFocus, history] = getFirstNodeLeft(currFocus, []);\n  if (!nextFocus) return null;\n\n  const getRightMost = (n: string, horizontalPrefs: string[]): string => {\n    let currNode = getBNodeByKey(nodeState, n.replace(\"root\", \"\"));\n    if (isContent(currNode)) return n;\n    if (isSplit(currNode)) {\n      if (currNode.direction === \"vertical\") {\n        if (horizontalPrefs.length > 0)\n          return getRightMost(n + horizontalPrefs.pop(), horizontalPrefs);\n        return getRightMost(n + \"0\", []); // if uncertain go to first\n      } else {\n        return getRightMost(n + \"1\", horizontalPrefs);\n      }\n    }\n  };\n  return getRightMost(nextFocus, history);\n};\n","import { BNode, Split, isSplit, isContent, BTreeUserState } from \"./types\";\nimport {\n  nudge,\n  getFocusUp,\n  getFocusRight,\n  getFocusLeft,\n  getFocusDown,\n  insertSplit,\n  adjustSplitSize,\n  rotateSplit,\n  deleteNode,\n  getAbsoluteSizeOfNode,\n  getAbsoluteOffsetOfNode,\n} from \"./btree_utils\";\n\nconst PADDING_SIZE = 0;\n\nconst splitToHTML = (\n  split: Split,\n  id?: string,\n  focusedIds?: string[],\n  handlers?: EventHandlers\n): HTMLElement => {\n  const container = document.createElement(\"div\");\n  container.id = id;\n  container.classList.add(\"container\", split.direction);\n\n  const fstChild = document.createElement(\"div\");\n  fstChild.appendChild(bNodeToHTML(split.fst, id + \"0\", focusedIds, handlers));\n  fstChild.classList.add(\"fst\");\n\n  fstChild.style[\n    split.direction === \"horizontal\" ? \"width\" : \"height\"\n  ] = `calc(${split.pos}% - ${2 * PADDING_SIZE}px)`;\n\n  const sndChild = document.createElement(\"div\");\n  sndChild.appendChild(bNodeToHTML(split.snd, id + \"1\", focusedIds, handlers));\n  sndChild.classList.add(\"snd\");\n\n  container.append(fstChild, sndChild);\n\n  container.onclick = handlers.onClick;\n\n  return container;\n};\n\ninterface EventHandlers {\n  onClick?: (evt: MouseEvent) => void;\n  //   onMouseDown?: (x: number, y: number) => void;\n  onMouseDown?: (evt: MouseEvent | TouchEvent) => void;\n  //   onMouseMove?: (x: number, y: number) => void;\n  onMouseMove?: (evt: MouseEvent | TouchEvent) => void;\n}\n\nconst bNodeToHTML = (\n  node: BNode,\n  id?: string,\n  focusedIds?: string[],\n  handlers?: EventHandlers\n): HTMLElement => {\n  focusedIds = focusedIds ? focusedIds : [];\n  id = id ? id : \"root\";\n\n  let result = null;\n  if (isSplit(node)) {\n    result = splitToHTML(node, id, focusedIds, handlers);\n  } else if (isContent(node)) {\n    let contentWrapper = document.createElement(\"div\");\n    contentWrapper.classList.add(\"content\");\n    contentWrapper.id = id;\n\n    let tempdiv = document.createElement(\"div\");\n    tempdiv.appendChild(document.createTextNode(id));\n\n    contentWrapper.ontouchstart = (e) => {\n      handlers.onMouseDown(e);\n      e.preventDefault();\n    };\n\n    contentWrapper.onmousedown = handlers.onMouseDown;\n    contentWrapper.onmousemove = handlers.onMouseMove;\n    contentWrapper.ontouchmove = handlers.onMouseMove;\n\n    contentWrapper.appendChild(tempdiv);\n    contentWrapper.appendChild(node);\n\n    result = contentWrapper;\n\n    // result = tempdiv;\n  }\n  if (focusedIds.indexOf(id) !== -1) {\n    result.classList.add(\"focused\");\n  }\n\n  return result;\n};\n\ninterface MouseState {\n  initX: number;\n  initY: number;\n  horizontalHandle?: string;\n  verticalHandle?: string;\n  selected?: string;\n}\nlet mouseState: MouseState = null;\n\nexport const render = (\n  root: HTMLElement,\n  state: BTreeUserState,\n  updateState: (s: BTreeUserState) => void\n): void => {\n  root.innerHTML = \"\";\n\n  let handleClick = (e: MouseEvent) => {\n    let id = (e.target as Element).id;\n    id = id.substring(id.indexOf(\".\"));\n\n    let newState = {\n      tree: state.tree,\n      selected: [id],\n    };\n    updateState(newState);\n  };\n\n  document.onkeydown = (evt) => {\n    let newFocus = [];\n    let n = null;\n    let newState = state.tree;\n    if (evt.shiftKey) {\n      if (evt.key === \"ArrowUp\") {\n        newState = nudge(newState, state.selected[0], \"vertical\", -5, true);\n      }\n      if (evt.key === \"ArrowDown\") {\n        newState = nudge(newState, state.selected[0], \"vertical\", 5, true);\n      }\n      if (evt.key === \"ArrowRight\") {\n        newState = nudge(newState, state.selected[0], \"horizontal\", 5, true);\n      }\n      if (evt.key === \"ArrowLeft\") {\n        newState = nudge(newState, state.selected[0], \"horizontal\", -5, true);\n      }\n    } else {\n      if (evt.key === \"ArrowUp\") {\n        n = getFocusUp(newState, state.selected[0]);\n      }\n      if (evt.key === \"ArrowDown\") {\n        n = getFocusDown(newState, state.selected[0]);\n      }\n      if (evt.key === \"ArrowRight\") {\n        n = getFocusRight(newState, state.selected[0]);\n      }\n      if (evt.key === \"ArrowLeft\") {\n        n = getFocusLeft(newState, state.selected[0]);\n      }\n    }\n    if (evt.key === \"Enter\") {\n      newState = insertSplit(newState, state.selected[0]);\n      n = state.selected + \"0\";\n    }\n    if (evt.key === \"Backspace\") {\n      newState = deleteNode(newState, state.selected[0]);\n    }\n    if (evt.key === \"+\") {\n      let lastChar = state.selected[0].charAt(state.selected[0].length - 1);\n      newState = adjustSplitSize(\n        newState,\n        state.selected[0],\n        5 * (lastChar === \"0\" ? 1 : -1)\n      );\n    }\n    if (evt.key === \"-\") {\n      let lastChar = state.selected[0].charAt(state.selected[0].length - 1);\n\n      newState = adjustSplitSize(\n        newState,\n        state.selected[0],\n        -5 * (lastChar === \"0\" ? 1 : -1)\n      );\n    }\n    if (evt.key === \"r\") {\n      newState = rotateSplit(newState, state.selected[0]);\n    }\n    updateState({\n      tree: newState,\n      selected: n ? [n] : state.selected,\n    });\n  };\n\n  const handleCursorDown = (x: number, y: number, id: string) => {\n    let width = getAbsoluteSizeOfNode(state.tree, id, \"horizontal\");\n    let height = getAbsoluteSizeOfNode(state.tree, id, \"vertical\");\n    let xoffset = getAbsoluteOffsetOfNode(state.tree, id, \"horizontal\");\n    let yoffset = getAbsoluteOffsetOfNode(state.tree, id, \"vertical\");\n\n    let relativeX = (x - xoffset) / width;\n    let relativeY = (y - yoffset) / height;\n\n    let horizontalHandle = null;\n    let verticalHandle = null;\n    if (relativeX > 0.5) {\n      horizontalHandle = \"right\";\n    } else if (relativeX < 0.5) {\n      horizontalHandle = \"left\";\n    }\n    if (relativeY > 0.5) {\n      verticalHandle = \"bottom\";\n    } else if (relativeY < 0.5) {\n      verticalHandle = \"top\";\n    }\n\n    mouseState = {\n      initX: x,\n      initY: y,\n      horizontalHandle: horizontalHandle,\n      verticalHandle: verticalHandle,\n      selected: id,\n    };\n  };\n\n  const handleCursorMove = (e: TouchEvent | MouseEvent) => {\n    let id = (e.target as Element).id;\n    id = id.substring(id.indexOf(\".\"));\n\n    let rootNode = document.getElementById(\"root\");\n    var bounds = rootNode.getBoundingClientRect();\n    var x = null;\n    let y = null;\n    if (\"touches\" in e) {\n      x = (100 * e.touches[0].clientX) / bounds.right;\n      y = (100 * e.touches[0].clientY) / bounds.bottom;\n    } else {\n      x = (100 * e.clientX) / bounds.right;\n      y = (100 * e.clientY) / bounds.bottom;\n    }\n    if (mouseState) {\n      let dx = x - mouseState.initX;\n      let dy = y - mouseState.initY;\n\n      let id = mouseState.selected;\n\n      let newTree = state.tree;\n      if (\n        (dx > 0 && mouseState.horizontalHandle === \"right\") ||\n        (dx < 0 && mouseState.horizontalHandle === \"left\")\n      ) {\n        newTree = nudge(state.tree, id, \"horizontal\", dx, true);\n      } else if (dx < 0 && mouseState.horizontalHandle === \"right\") {\n        let neighbor = getFocusRight(state.tree, id);\n        if (neighbor)\n          newTree = nudge(state.tree, neighbor, \"horizontal\", dx, true);\n      } else if (dx > 0 && mouseState.horizontalHandle === \"left\") {\n        let neighbor = getFocusLeft(state.tree, id);\n        if (neighbor)\n          newTree = nudge(state.tree, neighbor, \"horizontal\", dx, true);\n      }\n\n      if (\n        (dy < 0 && mouseState.verticalHandle === \"top\") ||\n        (dy > 0 && mouseState.verticalHandle === \"bottom\")\n      ) {\n        newTree = nudge(newTree, id, \"vertical\", dy, true);\n      } else if (dy > 0 && mouseState.verticalHandle === \"top\") {\n        let neighbor = getFocusUp(state.tree, id);\n        if (neighbor) newTree = nudge(newTree, neighbor, \"vertical\", dy, true);\n      } else if (dy < 0 && mouseState.verticalHandle === \"bottom\") {\n        let neighbor = getFocusDown(state.tree, id);\n        if (neighbor) newTree = nudge(newTree, neighbor, \"vertical\", dy, true);\n      }\n\n      updateState({\n        tree: newTree,\n        selected: state.selected,\n      });\n\n      // todo: remove this hack for handling touch events\n      // when the DOM is redrawn and the element is (unneccesarily) destroyed, it stops receiving updates to `state`\n      if (!(\"touches\" in e)) {\n        mouseState = {\n          initX: x,\n          initY: y,\n          horizontalHandle: mouseState.horizontalHandle,\n          verticalHandle: mouseState.verticalHandle,\n          selected: mouseState.selected,\n        };\n      }\n    }\n  };\n\n  root.onmouseup = (e) => {\n    mouseState = null;\n  };\n\n  root.appendChild(\n    bNodeToHTML(state.tree, \"root\", state.selected, {\n      onClick: handleClick,\n      onMouseDown: (e) => {\n        let id = (e.target as Element).id;\n        id = id.substring(id.indexOf(\".\"));\n\n        let rootNode = document.getElementById(\"root\");\n        var bounds = rootNode.getBoundingClientRect();\n        var x = null;\n        let y = null;\n        if (\"touches\" in e) {\n          x = (100 * e.touches[0].clientX) / bounds.right;\n          y = (100 * e.touches[0].clientY) / bounds.bottom;\n        } else {\n          x = (100 * e.clientX) / bounds.right;\n          y = (100 * e.clientY) / bounds.bottom;\n        }\n\n        handleCursorDown(x, y, id);\n      },\n      onMouseMove: handleCursorMove,\n    })\n  );\n};\n","export interface Split {\n  fst: BNode;\n  snd: BNode;\n  pos: number; // 0-100 representing split percentage taken by fst\n  direction: \"vertical\" | \"horizontal\";\n}\n\nexport interface Handle {\n  nodeId: string;\n  handle: string;\n  initX: number;\n  initY: number;\n}\n\nexport const isSplit = (n: any): n is Split => {\n  return (\n    n &&\n    \"fst\" in n &&\n    isBNode(n.fst) &&\n    \"snd\" in n &&\n    isBNode(n.snd) &&\n    \"pos\" in n\n  );\n};\n\nexport type Content = HTMLElement | Text;\nexport const isContent = (n: any): n is Content => {\n  return n instanceof HTMLElement || n instanceof Text;\n};\n\nexport type BNode = Split | Content;\nexport const isBNode = (n: any): n is BNode => {\n  return isContent(n) || isSplit(n);\n};\n\nexport interface BTreeUserState {\n  tree: BNode;\n  selected: string[];\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// TYPES\nimport { BNode, BTreeUserState } from \"./types\";\n\nimport { render } from \"./rendering\";\n\n// RENDERING\n\ndocument.addEventListener(\n  \"touchmove\",\n  (e) => {\n    e.preventDefault();\n  },\n  { passive: false }\n);\n\n// INIT\n\nlet initTree: BNode = {\n  fst: {\n    fst: document.createTextNode(\"hel\"),\n    snd: document.createTextNode(\"llo\"),\n    pos: 50,\n    direction: \"vertical\",\n  },\n  snd: {\n    fst: document.createTextNode(\"wor\"),\n    snd: {\n      fst: document.createTextNode(\"!\"),\n      snd: document.createTextNode(\"??\"),\n      pos: 50,\n      direction: \"horizontal\",\n    },\n    pos: 50,\n    direction: \"vertical\",\n  },\n  pos: 25,\n  direction: \"horizontal\",\n};\n\nconst updateState = (newState: BTreeUserState) => {\n  render(document.body, newState, updateState);\n};\n\nrender(\n  document.body,\n  {\n    selected: [],\n    tree: initTree,\n  },\n  updateState\n);\n"],"names":[],"sourceRoot":""}